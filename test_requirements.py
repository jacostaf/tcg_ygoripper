#!/usr/bin/env python3
"""
Requirements validation test script
Tests that all dependencies can be imported and basic functionality works
"""

import os
import sys


def test_requirements():
    """Test that all required packages can be imported"""
    try:
        # Test Flask
        import flask

        print(f"‚úì Flask {flask.__version__} imported successfully")

        # Test requests
        import requests

        print(f"‚úì Requests {requests.__version__} imported successfully")

        # Test python-dotenv
        import dotenv

        print("‚úì python-dotenv imported successfully")

        # Test pymongo
        import pymongo

        print(f"‚úì pymongo {pymongo.__version__} imported successfully")

        # Test bson (comes with pymongo)
        import bson

        print("‚úì bson imported successfully")

        # Test playwright
        import playwright

        print("‚úì playwright imported successfully")

        # Test pydantic
        import pydantic

        print(f"‚úì pydantic {pydantic.__version__} imported successfully")

        # Test psutil
        import psutil

        print(f"‚úì psutil {psutil.__version__} imported successfully")

        # Test SSL/TLS libraries
        import ssl

        print("‚úì ssl imported successfully")

        import certifi

        print("‚úì certifi imported successfully")

        import urllib3

        print("‚úì urllib3 imported successfully")

        import OpenSSL

        print("‚úì pyOpenSSL imported successfully")

        print("\n‚úÖ All requirements imported successfully!")
        return True

    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        return False


def test_modular_app():
    """Test that modular app components can be imported"""
    try:
        # Test all modular components
        from ygoapi.card_services import card_set_service
        from ygoapi.config import validate_config
        from ygoapi.database import get_database_manager
        from ygoapi.memory_manager import MemoryManager
        from ygoapi.models import CardModel, CardVariantModel
        from ygoapi.price_scraping import price_scraping_service
        from ygoapi.routes import register_routes
        from ygoapi.utils import extract_art_version

        print("‚úÖ All modular components imported successfully!")
        return True

    except ImportError as e:
        print(f"‚ùå Modular import error: {e}")
        return False


def test_flask_app_creation():
    """Test basic Flask app creation without database"""
    try:
        # Disable database connection for test
        os.environ["DISABLE_DB_CONNECTION"] = "1"

        from flask import Flask

        app = Flask(__name__)

        # Test that Flask app can be created
        print("‚úÖ Flask app creation test passed!")
        return True

    except Exception as e:
        print(f"‚ùå Flask app creation error: {e}")
        return False


if __name__ == "__main__":
    print("üß™ Testing requirements.txt dependencies...")
    print("=" * 50)

    success = True

    # Test 1: Requirements import
    print("\n1. Testing package imports...")
    success &= test_requirements()

    # Test 2: Modular components
    print("\n2. Testing modular components...")
    success &= test_modular_app()

    # Test 3: Flask app creation
    print("\n3. Testing Flask app creation...")
    success &= test_flask_app_creation()

    print("\n" + "=" * 50)
    if success:
        print("üéâ All tests passed! requirements.txt is valid.")
        sys.exit(0)
    else:
        print("‚ùå Some tests failed. Please check requirements.txt.")
        sys.exit(1)
